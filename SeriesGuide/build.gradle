buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath dep.androidPlugin
        classpath 'io.fabric.tools:gradle:1.22.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def loadStringPropertyOrPlaceholder(String name) {
    return rootProject.hasProperty(name) ? rootProject.property(name) : "MISSING"
}

android {
    compileSdkVersion project.androidCompileSdkVersion
    buildToolsVersion project.androidBuildToolsVersion

    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25

        vectorDrawables.useSupportLibrary = true

        buildConfigField("String", "TVDB_API_KEY", "\"${loadStringPropertyOrPlaceholder("TVDB_API_KEY")}\"")
        buildConfigField("String", "TMDB_API_KEY", "\"${loadStringPropertyOrPlaceholder("TMDB_API_KEY")}\"")
        buildConfigField("String", "TRAKT_CLIENT_ID", "\"${loadStringPropertyOrPlaceholder("TRAKT_CLIENT_ID")}\"")
        buildConfigField("String", "TRAKT_CLIENT_SECRET", "\"${loadStringPropertyOrPlaceholder("TRAKT_CLIENT_SECRET")}\"")
        buildConfigField("String", "IAP_KEY_A", "\"${loadStringPropertyOrPlaceholder("IAP_KEY_A")}\"")
        buildConfigField("String", "IAP_KEY_B", "\"${loadStringPropertyOrPlaceholder("IAP_KEY_B")}\"")
        buildConfigField("String", "IAP_KEY_C", "\"${loadStringPropertyOrPlaceholder("IAP_KEY_C")}\"")
        buildConfigField("String", "IAP_KEY_D", "\"${loadStringPropertyOrPlaceholder("IAP_KEY_D")}\"")
        buildConfigField("String", "IMAGE_CACHE_URL", "\"${loadStringPropertyOrPlaceholder("IMAGE_CACHE_URL")}\"")
        buildConfigField("String", "IMAGE_CACHE_SECRET", "\"${loadStringPropertyOrPlaceholder("IMAGE_CACHE_SECRET")}\"")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ eventBusIndex : 'com.battlelancer.seriesguide.SgEventBusIndex' ]
            }
        }
    }

    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    productFlavors {
        free {
            applicationId "com.battlelancer.seriesguide"
            versionCode project.androidVersionCode
            versionName project.androidVersionName

            manifestPlaceholders = [
                    androidBackupKey: rootProject.hasProperty("FREE.ANDROID_BACKUP_KEY")
                            ? rootProject.property("FREE.ANDROID_BACKUP_KEY") : "MISSING"
            ]
        }
        amazon {
            applicationId "com.uwetrottmann.seriesguide.amzn"
            versionCode project.androidVersionCode
            versionName project.androidVersionName
        }
        preview {
            applicationId "com.uwetrottmann.seriesguide.preview"
            versionCode project.androidVersionCode
            versionName project.androidVersionName + "-preview"
        }
    }

    signingConfigs {
        release {
            if(rootProject.file('keystore.properties').exists()) {
                def props = new Properties()
                props.load(new FileInputStream(rootProject.file('keystore.properties')))

                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if(rootProject.file('keystore.properties').exists()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            // enable for shrinking to stay well below the 65k method limit
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            pseudoLocalesEnabled true
        }
    }
}

dependencies {
    compile project(':api')
    compile project(':libraries:drag-sort-listview')
    compile project(':libraries:stickygridheaders')

    // https://docs.fabric.io/android/changelog.html
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true
    }
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    // https://github.com/google/gson/blob/master/CHANGELOG.md
    compile 'com.google.code.gson:gson:2.7'
    // https://github.com/google/dagger/releases
    def daggerVersion = "2.7"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    // https://github.com/JakeWharton/butterknife/blob/master/CHANGELOG.md
    def butterKnifeVersion = "8.4.0"
    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    // https://github.com/JakeWharton/timber/blob/master/CHANGELOG.md
    compile 'com.jakewharton.timber:timber:4.3.1'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.4'
    // https://github.com/square/okhttp/blob/master/CHANGELOG.md
    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    // temporarily add okhttp 3 support to picasso
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile ('com.uwetrottmann.androidutils:androidutils:2.2.1') {
        exclude group: 'com.android.support'
    }
    compile 'com.uwetrottmann.photoview:library:1.2.4'
    // https://github.com/UweTrottmann/thetvdb-java/blob/master/CHANGELOG.md
    compile 'com.uwetrottmann.thetvdb-java:thetvdb-java:1.3.0'
    // https://github.com/UweTrottmann/tmdb-java/blob/master/CHANGELOG.md
    compile 'com.uwetrottmann.tmdb2:tmdb-java:1.4.0'
    // https://github.com/UweTrottmann/trakt-java/blob/master/CHANGELOG.md
    compile ('com.uwetrottmann.trakt5:trakt-java:5.4.0') {
        exclude group: 'org.json', module: 'json'
        exclude group: 'joda-time', module: 'joda-time'
        exclude group: 'commons-codec', module: 'commons-codec' // databinding already has it
    }
    // http://greenrobot.org/eventbus/changelog/
    compile 'org.greenrobot:eventbus:3.0.0'
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.0.1'
    // https://github.com/dlew/joda-time-android/blob/master/CHANGELOG.md
    def jodaTimeVersion = '2.9.5'
    compile "net.danlew:android.joda:$jodaTimeVersion"

    // Android support libraries
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:support-annotations:$supportVersion"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:customtabs:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:palette-v7:$supportVersion"
    compile "com.android.support:percent:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"

    // Google Play Services
    // https://developers.google.com/android/guides/releases
    def playServicesVersion = '10.0.1'
    compile "com.google.android.gms:play-services-base:$playServicesVersion"
    compile "com.google.android.gms:play-services-analytics:$playServicesVersion"
    compile "com.google.android.gms:play-services-auth:$playServicesVersion"

    // App Engine
    // https://github.com/google/google-api-java-client/commits/dev
    compile('com.google.api-client:google-api-client-android:1.22.0') {
        exclude group: 'com.google.android.google-play-services' // including latest ourselves
        exclude group: 'com.google.guava', module: 'guava-jdk5' // data binding using regular guava
        exclude group: 'org.apache.httpcomponents', module: 'httpclient' // unused
    }

    // libs folder
    compile fileTree(dir: 'libs', include: '*.jar')

    // Amazon flavor specific
    amazonCompile files('libs/amazon/in-app-purchasing-2.0.76.jar')

    // Android unit tests
    testCompile 'junit:junit:4.12'
    testCompile "com.android.support:support-annotations:$supportVersion"
    testCompile 'com.squareup.assertj:assertj-android:1.1.1'
    // include regular joda-time to have access to the tz database without init call
    testCompile "joda-time:joda-time:$jodaTimeVersion"

}
